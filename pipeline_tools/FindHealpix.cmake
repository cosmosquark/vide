OPTION(ENABLE_OPENMP "Set to Yes if Healpix and/or you need openMP" OFF)

#
# OpenMP handling
#


INCLUDE(FindOpenMP)

IF(ENABLE_OPENMP)

  IF (NOT OPENMP_FOUND)
    MESSAGE(ERROR "No known compiler option for enabling OpenMP")
  ENDIF(NOT OPENMP_FOUND)

  SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
  SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKED_FLAGS} ${OpenMP_C_FLAGS}")

ENDIF(ENABLE_OPENMP)



SET(HEALPIX_BASE_PATH $ENV{HEALPIX})
SET(HEALPIX_TARGET $ENV{HEALPIX_TARGET})
SET(HEALPIX_PATH ${HEALPIX_BASE_PATH}/src/cxx/${HEALPIX_TARGET})
SET(HEALPIX_HINT_INCLUDE ${HEALPIX_PATH}/include)
SET(HEALPIX_HINT_LIB ${HEALPIX_PATH}/lib)

find_path(HEALPIX_INCLUDE_PATH NAMES healpix_map.h PATHS ${HEALPIX_HINT_INCLUDE})

find_library(HEALPIX_LIBRARY healpix_cxx PATHS ${HEALPIX_HINT_LIB})
find_library(FFTPACK_LIBRARY fftpack PATHS ${HEALPIX_HINT_LIB})
find_library(CFITSIO_LIBRARY cfitsio PATHS ${HEALPIX_HINT_LIB})
find_library(CXXSUPPORT_LIBRARY cxxsupport PATHS ${HEALPIX_HINT_LIB})
find_library(PSHT_LIBRARY psht PATHS ${HEALPIX_HINT_LIB})
find_library(CUTILS_LIBRARY c_utils PATHS ${HEALPIX_HINT_LIB})

SET(HEALPIX_LIBRARIES 
  ${HEALPIX_LIBRARY} ${EXTRA_HEALPIX_LIBRARIES} 
  ${FFTPACK_LIBRARY} ${CXXSUPPORT_LIBRARY} ${CFITSIO_LIBRARY}
) 